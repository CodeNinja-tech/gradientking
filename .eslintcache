[{"D:\\Jaagrav's Stuff\\Coding\\OpenSource\\gradientking\\src\\index.js":"1","D:\\Jaagrav's Stuff\\Coding\\OpenSource\\gradientking\\src\\serviceWorkerRegistration.js":"2","D:\\Jaagrav's Stuff\\Coding\\OpenSource\\gradientking\\src\\reportWebVitals.js":"3","D:\\Jaagrav's Stuff\\Coding\\OpenSource\\gradientking\\src\\app\\App.js":"4","D:\\Jaagrav's Stuff\\Coding\\OpenSource\\gradientking\\src\\components\\Footer.js":"5","D:\\Jaagrav's Stuff\\Coding\\OpenSource\\gradientking\\src\\components\\Header.js":"6","D:\\Jaagrav's Stuff\\Coding\\OpenSource\\gradientking\\src\\components\\Gradient.js":"7","D:\\Jaagrav's Stuff\\Coding\\OpenSource\\gradientking\\src\\components\\Fullpage.js":"8","D:\\Jaagrav's Stuff\\Coding\\OpenSource\\gradientking\\src\\components\\GradientGenerator.js":"9","D:\\Jaagrav's Stuff\\Coding\\OpenSource\\gradientking\\src\\hooks\\useLocalStorage.js":"10","D:\\Jaagrav's Stuff\\Coding\\OpenSource\\gradientking\\src\\components\\Notfound.js":"11","D:\\Jaagrav's Stuff\\Coding\\OpenSource\\gradientking\\src\\components\\Contributors.js":"12","D:\\Jaagrav's Stuff\\Coding\\OpenSource\\gradientking\\src\\components\\Search.js":"13","D:\\Jaagrav's Stuff\\Coding\\OpenSource\\gradientking\\src\\components\\Icon.js":"14","D:\\Jaagrav's Stuff\\Coding\\OpenSource\\gradientking\\src\\utils\\refreshToken.js":"15","D:\\Jaagrav's Stuff\\Coding\\OpenSource\\gradientking\\src\\components\\SavedGradients.js":"16"},{"size":820,"mtime":1614863821784,"results":"17","hashOfConfig":"18"},{"size":5201,"mtime":1614863821792,"results":"19","hashOfConfig":"18"},{"size":377,"mtime":1614863821787,"results":"20","hashOfConfig":"18"},{"size":4805,"mtime":1614890142191,"results":"21","hashOfConfig":"18"},{"size":1414,"mtime":1614863821757,"results":"22","hashOfConfig":"18"},{"size":6041,"mtime":1614867496139,"results":"23","hashOfConfig":"18"},{"size":3736,"mtime":1614888498401,"results":"24","hashOfConfig":"18"},{"size":4056,"mtime":1614895809550,"results":"25","hashOfConfig":"18"},{"size":3403,"mtime":1614863821765,"results":"26","hashOfConfig":"18"},{"size":630,"mtime":1614863821781,"results":"27","hashOfConfig":"18"},{"size":631,"mtime":1614863821773,"results":"28","hashOfConfig":"18"},{"size":978,"mtime":1614863821755,"results":"29","hashOfConfig":"18"},{"size":478,"mtime":1614863821776,"results":"30","hashOfConfig":"18"},{"size":1860,"mtime":1614863821771,"results":"31","hashOfConfig":"18"},{"size":680,"mtime":1614863821817,"results":"32","hashOfConfig":"18"},{"size":1144,"mtime":1614888007172,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"ldtfbw",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"36"},"D:\\Jaagrav's Stuff\\Coding\\OpenSource\\gradientking\\src\\index.js",[],["74","75"],"D:\\Jaagrav's Stuff\\Coding\\OpenSource\\gradientking\\src\\serviceWorkerRegistration.js",[],"D:\\Jaagrav's Stuff\\Coding\\OpenSource\\gradientking\\src\\reportWebVitals.js",[],"D:\\Jaagrav's Stuff\\Coding\\OpenSource\\gradientking\\src\\app\\App.js",["76","77","78","79"],"import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"animate.css/animate.css\";\r\nimport Footer from \"../components/Footer\";\r\nimport Gradient from \"../components/Gradient\";\r\nimport Header from \"../components/Header\";\r\nimport useLocalStorage from \"../hooks/useLocalStorage\";\r\nimport GradientGenerator from \"../components/GradientGenerator\";\r\nimport \"../styles/App.css\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport Contributors from \"../components/Contributors\";\r\nimport Notfound from \"../components/Notfound\";\r\nimport SavedGradients from \"../components/SavedGradients\";\r\nimport { useMediaQuery } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport { Collection } from \"react-virtualized\";\r\n\r\nconst App = () => {\r\n  const [data, setData] = useState([]);\r\n  const [align, setAlign] = useLocalStorage(\"align:\", \"left\");\r\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\", {\r\n    noSsr: true,\r\n  });\r\n  const [dark, setDark] = useLocalStorage(\"mode:\", prefersDarkMode);\r\n  const [savedGradients, setSavedGradients] = useLocalStorage(\r\n    \"saved-gradients:\",\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    setDark(prefersDarkMode);\r\n  }, [prefersDarkMode, setDark]);\r\n\r\n  const getData = () => {\r\n    fetch(\"data.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then(function (response) {\r\n        console.log(response);\r\n        return response.json();\r\n      })\r\n      .then(function (data) {\r\n        console.log(data);\r\n        setData(data);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(savedGradients);\r\n  }, [savedGradients]);\r\n\r\n  const rotate = () => {\r\n    if (align == \"left\") {\r\n      setAlign(\"right\");\r\n    } else if (align == \"right\") {\r\n      setAlign(\"top\");\r\n    } else if (align == \"top\") {\r\n      setAlign(\"bottom\");\r\n    } else {\r\n      setAlign(\"left\");\r\n    }\r\n  };\r\n  const changeMode = () => {\r\n    if (dark) setDark(false);\r\n    else setDark(true);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className={clsx(dark ? \"main dark\" : \"main light\")}>\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <div className=\"App\">\r\n              <ToastContainer limit={2} />\r\n              <Header rotate={rotate} changeMode={changeMode} />\r\n              <div className=\"colorCont flex\">\r\n                {data.map((gradient) => (\r\n                  <Gradient\r\n                    gradient={gradient}\r\n                    id={gradient.id}\r\n                    align={align}\r\n                    key={gradient.id}\r\n                    savedGradients={savedGradients}\r\n                    setSavedGradients={setSavedGradients}\r\n                  />\r\n                ))}\r\n              </div>\r\n              <Footer />\r\n            </div>\r\n          </Route>\r\n          <Route path=\"/gradient/:id\" exact>\r\n            <ToastContainer limit={2} />\r\n            <Header rotate={rotate} changeMode={changeMode} />\r\n            <Fullpage\r\n              data={data}\r\n              align={align}\r\n              savedGradients={savedGradients}\r\n              setSavedGradients={setSavedGradients}\r\n            />\r\n            <Footer />\r\n          </Route>\r\n          <Route path=\"/contributors\" exact>\r\n            <Header rotate={rotate} changeMode={changeMode} />\r\n            <div className=\"contributors flex\">\r\n              {data.map((contributor) => (\r\n                <Contributors contributor={contributor} />\r\n              ))}\r\n            </div>\r\n            <Footer />\r\n          </Route>\r\n          <Route path=\"/gradient_generator\" exact>\r\n            <ToastContainer limit={2} />\r\n            <Header rotate={rotate} changeMode={changeMode} />\r\n            <GradientGenerator />\r\n            <Footer />\r\n          </Route>\r\n          <Route path=\"/saved\" exact>\r\n            <ToastContainer limit={2} />\r\n            <Header rotate={rotate} changeMode={changeMode} />\r\n            <SavedGradients\r\n              align={align}\r\n              savedGradients={savedGradients}\r\n              setSavedGradients={setSavedGradients}\r\n            />\r\n            <Footer />\r\n          </Route>\r\n          <Route path=\"/contributors\" exact>\r\n            <Header rotate={rotate} changeMode={changeMode} />\r\n            <div className=\"contributors flex\">\r\n              {data.map((contributor) => (\r\n                <Contributors contributor={contributor} />\r\n              ))}\r\n            </div>\r\n            <Footer />\r\n          </Route>\r\n          <Route component={Notfound} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","D:\\Jaagrav's Stuff\\Coding\\OpenSource\\gradientking\\src\\components\\Footer.js",[],"D:\\Jaagrav's Stuff\\Coding\\OpenSource\\gradientking\\src\\components\\Header.js",["80","81","82","83","84","85","86","87"],"import { Button, Tooltip } from \"@material-ui/core\";\r\nimport {\r\n  AddToPhotos,\r\n  Brightness4,\r\n  FormatColorFill,\r\n  RotateRight,\r\n  Star,\r\n} from \"@material-ui/icons\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Search from \"./Search\";\r\nimport { useGoogleLogin } from \"react-google-login\";\r\nimport { useGoogleLogout } from \"react-google-login\";\r\n\r\n// refresh token\r\nimport { refreshTokenSetup } from \"../utils/refreshToken\";\r\nimport Icon from \"./Icon\";\r\nimport useLocalStorage from \"../hooks/useLocalStorage\";\r\n\r\nconst clientId =\r\n  \"121772990060-n4vkt1p76epmjdmk4o0uptpq4jiekkld.apps.googleusercontent.com\";\r\n\r\nconst Header = ({ rotate, changeMode }) => {\r\n  //guest avatars\r\n  const avatars = [\r\n    \"https://avataaars.io/?avatarStyle=Circle&accessoriesType=Round&facialHairType=BeardMedium&facialHairColor=BrownDark&clotheType=BlazerSweater&eyeType=Surprised&eyebrowType=RaisedExcited&mouthType=Smile&skinColor=Light\",\r\n    \"https://avataaars.io/?avatarStyle=Circle&topType=Hijab&accessoriesType=Sunglasses&hatColor=Red&clotheType=ShirtScoopNeck&clotheColor=Blue02&eyeType=Surprised&eyebrowType=RaisedExcited&mouthType=Smile&skinColor=Light\",\r\n    \"https://avataaars.io/?avatarStyle=Circle&topType=WinterHat1&accessoriesType=Wayfarers&hatColor=Blue02&facialHairType=Blank&clotheType=GraphicShirt&clotheColor=Blue03&graphicType=Deer&eyeType=Close&eyebrowType=SadConcerned&mouthType=Smile&skinColor=Light\",\r\n    \"https://avataaars.io/?avatarStyle=Circle&topType=LongHairBigHair&accessoriesType=Prescription01&hairColor=Brown&facialHairType=BeardLight&facialHairColor=Auburn&clotheType=ShirtVNeck&clotheColor=Gray01&eyeType=Happy&eyebrowType=FlatNatural&mouthType=Smile&skinColor=Light\",\r\n    \"https://avataaars.io/?avatarStyle=Circle&topType=ShortHairDreads01&accessoriesType=Sunglasses&hairColor=BrownDark&facialHairType=BeardMedium&facialHairColor=Black&clotheType=Hoodie&clotheColor=PastelYellow&eyeType=Happy&eyebrowType=FlatNatural&mouthType=Smile&skinColor=Light\",\r\n    \"https://avataaars.io/?avatarStyle=Circle&topType=ShortHairFrizzle&accessoriesType=Sunglasses&hairColor=BlondeGolden&facialHairType=Blank&clotheType=BlazerShirt&eyeType=Surprised&eyebrowType=DefaultNatural&mouthType=Smile&skinColor=Light\",\r\n    \"https://avataaars.io/?avatarStyle=Circle&topType=Hat&accessoriesType=Wayfarers&hairColor=Auburn&facialHairType=Blank&clotheType=BlazerShirt&eyeType=WinkWacky&eyebrowType=UpDown&mouthType=Default&skinColor=Pale\",\r\n    \"https://avataaars.io/?avatarStyle=Circle&topType=ShortHairShortWaved&accessoriesType=Kurt&hairColor=Brown&facialHairType=Blank&clotheType=BlazerSweater&eyeType=Cry&eyebrowType=SadConcernedNatural&mouthType=Smile&skinColor=Light\",\r\n  ];\r\n\r\n  const guestAvatar = avatars[Math.floor(Math.random() * avatars.length)];\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [profilePic, setProfilePic] = useState(\"\");\r\n  const [guestName, setGuestName] = useState(\"Guest User\");\r\n  const [guestProfilePic, setGuestProfilePic] = useLocalStorage(\r\n    \"avatar:\",\r\n    guestAvatar\r\n  );\r\n\r\n  // login\r\n  const onSuccess = (res) => {\r\n    setName(res.profileObj.name);\r\n    setProfilePic(res.profileObj.imageUrl);\r\n\r\n    console.log(res);\r\n    refreshTokenSetup(res);\r\n  };\r\n\r\n  const onFailure = (res) => {\r\n    console.log(\"Login failed: res:\", res);\r\n  };\r\n\r\n  const { signIn } = useGoogleLogin({\r\n    onSuccess,\r\n    onFailure,\r\n    clientId,\r\n    isSignedIn: true,\r\n    accessType: \"offline\",\r\n  });\r\n\r\n  // logout\r\n  const onLogoutSuccess = (res) => {\r\n    setName(\"\");\r\n    setProfilePic(\"\");\r\n\r\n    console.log(\"Logged out Success\");\r\n  };\r\n\r\n  const { signOut } = useGoogleLogout({\r\n    clientId,\r\n    onLogoutSuccess,\r\n    onFailure,\r\n  });\r\n\r\n  let history = useHistory();\r\n\r\n  const gotoGenerator = () => {\r\n    history.push(\"/gradient_generator\");\r\n  };\r\n\r\n  const gotoHome = () => {\r\n    history.push(\"/\");\r\n  };\r\n  const gototGithub = () => {\r\n    window.open(\"https://github.com/saviomartin/gradientking#-contributing\");\r\n  };\r\n\r\n  const goToSaved = () => {\r\n    history.push(\"/saved\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"header flex\">\r\n      <div className=\"logo flex\" onClick={gotoHome}>\r\n        <Icon />\r\n        <h1>Gradient King</h1>\r\n      </div>\r\n      <div className=\"rightBtns flex\">\r\n        <Tooltip title=\"Search\" aria-label=\"add\">\r\n          <Search />\r\n        </Tooltip>\r\n        <Tooltip title=\"Rotate\" aria-label=\"add\">\r\n          <Button onClick={rotate} className=\"navbtns rotateBtn\">\r\n            <RotateRight />\r\n          </Button>\r\n        </Tooltip>\r\n        <Tooltip title=\"Add Gradient\" aria-label=\"add\">\r\n          <Button onClick={gototGithub} className=\"navbtns addBtn\">\r\n            <AddToPhotos />\r\n          </Button>\r\n        </Tooltip>\r\n        <Tooltip title=\"Dark Mode\" aria-label=\"add\">\r\n          <Button onClick={changeMode} className=\"navbtns\">\r\n            <Brightness4 />\r\n          </Button>\r\n        </Tooltip>\r\n        <Tooltip title=\"Gradient Generator\" aria-label=\"add\">\r\n          <Button onClick={gotoGenerator} className=\"navbtns\">\r\n            <FormatColorFill />\r\n          </Button>\r\n        </Tooltip>\r\n        <Tooltip title=\"Saved Gradients\" aria-label=\"add\">\r\n          <Button onClick={goToSaved} className=\"navbtns\">\r\n            <Star />\r\n          </Button>\r\n        </Tooltip>\r\n        {/* <div className=\"profile flex\">\r\n          {name ? (\r\n            <>\r\n              <img src={profilePic} alt={name} />\r\n              <div className=\"profileComp\">\r\n                <h4>{name}</h4>\r\n                <Button onClick={signOut}>Sign out</Button>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <img src={guestProfilePic} alt={guestName} />\r\n              <div className=\"profileComp\">\r\n                <h4>{guestName}</h4>\r\n                <Button onClick={signIn}>Sign in with Google</Button>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","D:\\Jaagrav's Stuff\\Coding\\OpenSource\\gradientking\\src\\components\\Gradient.js",[],"D:\\Jaagrav's Stuff\\Coding\\OpenSource\\gradientking\\src\\components\\Fullpage.js",["88"],"import { Button, Tooltip } from \"@material-ui/core\";\r\nimport { Code, GitHub, Star, StarOutline } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Fullpage = ({ data, align, savedGradients, setSavedGradients }) => {\r\n  let params = useParams();\r\n  const id = params.id;\r\n  const username = data[id].githubUsername;\r\n\r\n  const code = `\r\n  background: ${data[id].colors[0]};  /* fallback for old browsers */\r\n  background: -webkit-linear-gradient(to ${align}, ${data[id].colors[0]}, ${data[id].colors[1]});\r\n  background: linear-gradient(to ${align}, ${data[id].colors[0]}, ${data[id].colors[1]});\r\n  `;\r\n  const notify = () => {\r\n    toast(\"Copied CSS 🚀\");\r\n  };\r\n\r\n  const search = (nameKey, myArray) => {\r\n    for (var i = 0; i < myArray.length; i++) {\r\n      if (myArray[i].id == nameKey) {\r\n        return i;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  const saveGradient = () => {\r\n    if (search(id, savedGradients) !== false) {\r\n      toast(\"Gradient Deleted 📕\");\r\n      const tempGradients = savedGradients;\r\n      tempGradients.splice(search(id, savedGradients), 1);\r\n      setSavedGradients([...tempGradients]);\r\n    } else {\r\n      toast(\"Gradient Saved 📗\");\r\n\r\n      setSavedGradients([...savedGradients, data[id]]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fullpage flex\">\r\n      <div className=\"fullpage__left flex animate__animated animate__fadeInLeft\">\r\n        <div className=\"fullpage_colors flex\">\r\n          <Tooltip title=\"Copy Color\" aria-label=\"add\">\r\n            <h1\r\n              style={{ color: `${data[id].colors[0]}` }}\r\n              onClick={() =>\r\n                navigator.clipboard.writeText(`${data[id].colors[0]}`)\r\n              }\r\n            >\r\n              {data[id].colors[0]}\r\n            </h1>\r\n          </Tooltip>\r\n          <Tooltip title=\"Copy Color\" aria-label=\"add\">\r\n            <h1\r\n              style={{ color: `${data[id].colors[1]}` }}\r\n              onClick={() =>\r\n                navigator.clipboard.writeText(`${data[id].colors[1]}`)\r\n              }\r\n            >\r\n              {data[id].colors[1]}\r\n            </h1>\r\n          </Tooltip>\r\n        </div>\r\n        <textarea value={code}></textarea>\r\n        <div className=\"fullpage__bottom flex\">\r\n          <div className=\"fullpage__btns\">\r\n            <Tooltip title=\"Copy CSS\" aria-label=\"add\">\r\n              <Button\r\n                onClick={() => {\r\n                  navigator.clipboard.writeText(`${code}`);\r\n                  notify();\r\n                }}\r\n                style={{ border: `1px solid ${data[id].colors[0]}` }}\r\n              >\r\n                Copy CSS <Code />\r\n              </Button>\r\n            </Tooltip>\r\n            <Tooltip\r\n              title={search(id, savedGradients) !== false ? \"Saved\" : \"Save\"}\r\n              aria-label=\"add\"\r\n            >\r\n              <Button\r\n                onClick={() => {\r\n                  saveGradient();\r\n                }}\r\n                style={{\r\n                  border: `1px solid ${data[id].colors[0]}`,\r\n                  marginLeft: 8,\r\n                }}\r\n              >\r\n                {search(id, savedGradients) !== false ? (\r\n                  <>\r\n                    Saved <Star />\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    Save <StarOutline />\r\n                  </>\r\n                )}\r\n              </Button>\r\n            </Tooltip>\r\n          </div>\r\n          <h3>\r\n            From <GitHub className=\"ghicon\" />\r\n            <a href={\"https://github.com/\" + username}>{username}</a>\r\n          </h3>\r\n        </div>\r\n      </div>\r\n      <div className=\"fullpage__right flex animate__animated animate__fadeInRight\">\r\n        <div\r\n          className=\"preview\"\r\n          style={{\r\n            background: `linear-gradient(to ${align}, ${data[id].colors[0]}, ${data[id].colors[1]})`,\r\n          }}\r\n        ></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Fullpage;\r\n","D:\\Jaagrav's Stuff\\Coding\\OpenSource\\gradientking\\src\\components\\GradientGenerator.js",["89"],"import React, { useState } from \"react\";\r\nimport Color, { Palette } from \"color-thief-react\";\r\nimport { Button, Tooltip } from \"@material-ui/core\";\r\nimport { Code } from \"@material-ui/icons\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst Loading = () => <div>Loading...</div>;\r\n\r\nconst GradientGenerator = () => {\r\n  const [image, setImage] = useState(\r\n    \"https://live.staticflickr.com/65535/50237066832_72c7290c5c_c.jpg\"\r\n  );\r\n  const onChange = (e) => {\r\n    const files = e.target.files;\r\n    const file = files[0];\r\n    getBase64(file);\r\n  };\r\n\r\n  const onLoad = (fileString) => {\r\n    setImage(fileString);\r\n    console.log(fileString);\r\n  };\r\n\r\n  const getBase64 = (file) => {\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => {\r\n      onLoad(reader.result);\r\n    };\r\n  };\r\n\r\n  const notify = () => {\r\n    toast(\"Copied CSS 🚀\");\r\n  };\r\n  const imgSrc = image;\r\n  return (\r\n    <div className=\"gradientGenerator\">\r\n      <Palette src={imgSrc} crossOrigin=\"anonymous\" format=\"hex\" colorCount={4}>\r\n        {({ data, loading }) => {\r\n          if (loading) return <Loading />;\r\n          return (\r\n            <div\r\n              className=\"gradientCont flex\"\r\n              style={{\r\n                background: `linear-gradient(to left, ${data[0]}, ${data[1]}, ${data[2]}, ${data[3]})`,\r\n              }}\r\n            >\r\n              <div className=\"palatte gradient animate__animated animate__fadeInDown\">\r\n                <div className=\"cont flex\">\r\n                  {data.map((color, index) => (\r\n                    <Tooltip title=\"Copy Color\" aria-label=\"add\">\r\n                      <h4\r\n                        key={index}\r\n                        style={{ color: color }}\r\n                        onClick={() => navigator.clipboard.writeText(color)}\r\n                      >\r\n                        {color}\r\n                      </h4>\r\n                    </Tooltip>\r\n                  ))}\r\n                </div>\r\n                <img src={imgSrc} alt=\"\" className=\"demoImage\" />\r\n                <div className=\"cont flex\">\r\n                  <form>\r\n                    <Tooltip title=\"Select your file\" aria-label=\"add\">\r\n                      <label className=\"uploadImage\">\r\n                        Select Your File\r\n                        <input\r\n                          type=\"file\"\r\n                          onChange={onChange}\r\n                          className=\"uploadImage\"\r\n                        />\r\n                      </label>\r\n                    </Tooltip>\r\n                  </form>\r\n                  <Tooltip title=\"Copy Gradient\" aria-label=\"add\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      className=\"copybtn\"\r\n                      onClick={() => {\r\n                        navigator.clipboard.writeText(\r\n                          `background: linear-gradient(to left, ${data[0]}, ${data[1]}, ${data[2]}, ${data[3]});`\r\n                        );\r\n                        notify();\r\n                      }}\r\n                    >\r\n                      <Code />\r\n                    </Button>\r\n                  </Tooltip>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Palette>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GradientGenerator;\r\n","D:\\Jaagrav's Stuff\\Coding\\OpenSource\\gradientking\\src\\hooks\\useLocalStorage.js",[],"D:\\Jaagrav's Stuff\\Coding\\OpenSource\\gradientking\\src\\components\\Notfound.js",["90"],"import { Button } from \"@material-ui/core\";\r\nimport { Home } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Notfound = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"notFound flex\">\r\n      <div className=\"box\">\r\n        <h1>404</h1>\r\n        <h2>Looks like you're lost. Go back home</h2>\r\n        <Button\r\n          className=\"flex\"\r\n          className=\"goHomebtn\"\r\n          onClick={() => history.push(\"/\")}\r\n        >\r\n          Go Back Home <Home />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notfound;\r\n","D:\\Jaagrav's Stuff\\Coding\\OpenSource\\gradientking\\src\\components\\Contributors.js",[],"D:\\Jaagrav's Stuff\\Coding\\OpenSource\\gradientking\\src\\components\\Search.js",["91"],"import { Input } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst Search = () => {\r\n  const findSearchWord = (e) => {\r\n    if (e.keyCode === 13) {\r\n      window.find(e.target.value);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"search\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search for a Color or Gradient name\"\r\n        className=\"input\"\r\n        onKeyDown={(e) => findSearchWord(e)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","D:\\Jaagrav's Stuff\\Coding\\OpenSource\\gradientking\\src\\components\\Icon.js",[],"D:\\Jaagrav's Stuff\\Coding\\OpenSource\\gradientking\\src\\utils\\refreshToken.js",[],"D:\\Jaagrav's Stuff\\Coding\\OpenSource\\gradientking\\src\\components\\SavedGradients.js",["92","93"],"import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nimport Aos from \"aos\";\r\nimport \"aos/dist/aos.css\";\r\n\r\nimport Gradient from \"../components/Gradient\";\r\n\r\nfunction SavedGradients({ align, savedGradients, setSavedGradients }) {\r\n  const savedGradientsRef = useRef();\r\n\r\n  useEffect(() => {\r\n    savedGradientsRef.current.style.minHeight = window.innerHeight - 141 + \"px\";\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"savedGradients\" ref={savedGradientsRef}>\r\n      <h1 className=\"title\">Saved Gradients</h1>\r\n      {!savedGradients.length && (\r\n        <div className=\"no-gradients-saved\">\r\n          You have not saved any gradients yet.\r\n        </div>\r\n      )}\r\n      <div className=\"colorCont flex\">\r\n        {savedGradients &&\r\n          savedGradients.map((gradient) => (\r\n            <Gradient\r\n              gradient={gradient}\r\n              id={gradient.id}\r\n              align={align}\r\n              key={gradient.id}\r\n              savedGradients={savedGradients}\r\n              setSavedGradients={setSavedGradients}\r\n            />\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SavedGradients;\r\n",{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":17,"column":10,"nodeType":"100","messageId":"101","endLine":17,"endColumn":20},{"ruleId":"102","severity":1,"message":"103","line":61,"column":15,"nodeType":"104","messageId":"105","endLine":61,"endColumn":17},{"ruleId":"102","severity":1,"message":"103","line":63,"column":22,"nodeType":"104","messageId":"105","endLine":63,"endColumn":24},{"ruleId":"102","severity":1,"message":"103","line":65,"column":22,"nodeType":"104","messageId":"105","endLine":65,"endColumn":24},{"ruleId":"98","severity":1,"message":"106","line":38,"column":10,"nodeType":"100","messageId":"101","endLine":38,"endColumn":14},{"ruleId":"98","severity":1,"message":"107","line":39,"column":10,"nodeType":"100","messageId":"101","endLine":39,"endColumn":20},{"ruleId":"98","severity":1,"message":"108","line":40,"column":10,"nodeType":"100","messageId":"101","endLine":40,"endColumn":19},{"ruleId":"98","severity":1,"message":"109","line":40,"column":21,"nodeType":"100","messageId":"101","endLine":40,"endColumn":33},{"ruleId":"98","severity":1,"message":"110","line":41,"column":10,"nodeType":"100","messageId":"101","endLine":41,"endColumn":25},{"ruleId":"98","severity":1,"message":"111","line":41,"column":27,"nodeType":"100","messageId":"101","endLine":41,"endColumn":45},{"ruleId":"98","severity":1,"message":"112","line":59,"column":11,"nodeType":"100","messageId":"101","endLine":59,"endColumn":17},{"ruleId":"98","severity":1,"message":"113","line":75,"column":11,"nodeType":"100","messageId":"101","endLine":75,"endColumn":18},{"ruleId":"102","severity":1,"message":"103","line":23,"column":25,"nodeType":"104","messageId":"105","endLine":23,"endColumn":27},{"ruleId":"98","severity":1,"message":"114","line":2,"column":8,"nodeType":"100","messageId":"101","endLine":2,"endColumn":13},{"ruleId":"115","severity":1,"message":"116","line":15,"column":11,"nodeType":"117","endLine":15,"endColumn":32},{"ruleId":"98","severity":1,"message":"118","line":1,"column":10,"nodeType":"100","messageId":"101","endLine":1,"endColumn":15},{"ruleId":"98","severity":1,"message":"119","line":1,"column":28,"nodeType":"100","messageId":"101","endLine":1,"endColumn":36},{"ruleId":"98","severity":1,"message":"120","line":3,"column":8,"nodeType":"100","messageId":"101","endLine":3,"endColumn":11},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-unused-vars","'Collection' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'name' is assigned a value but never used.","'profilePic' is assigned a value but never used.","'guestName' is assigned a value but never used.","'setGuestName' is assigned a value but never used.","'guestProfilePic' is assigned a value but never used.","'setGuestProfilePic' is assigned a value but never used.","'signIn' is assigned a value but never used.","'signOut' is assigned a value but never used.","'Color' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Input' is defined but never used.","'useState' is defined but never used.","'Aos' is defined but never used.","no-global-assign","no-unsafe-negation"]